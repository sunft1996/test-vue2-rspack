import { RawContainerPluginOptions, BuiltinPlugin } from "@rspack/binding";
import { BuiltinPluginName, RspackBuiltinPlugin } from "../builtin-plugin/base";
import { EntryRuntime, Filename, LibraryOptions } from "../config";
import { Compiler } from "../Compiler";
export type ContainerPluginOptions = {
    exposes: Exposes;
    filename?: Filename;
    library?: LibraryOptions;
    name: string;
    runtime?: EntryRuntime;
    shareScope?: string;
};
export type Exposes = (ExposesItem | ExposesObject)[] | ExposesObject;
export type ExposesItem = string;
export type ExposesItems = ExposesItem[];
export type ExposesObject = {
    [k: string]: ExposesConfig | ExposesItem | ExposesItems;
};
export type ExposesConfig = {
    import: ExposesItem | ExposesItems;
    name?: string;
};
export declare class ContainerPlugin extends RspackBuiltinPlugin {
    name: BuiltinPluginName;
    _options: RawContainerPluginOptions;
    _library: {
        type: string;
        amdContainer?: string | undefined;
        auxiliaryComment?: string | {
            amd?: string | undefined;
            commonjs?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        } | undefined;
        export?: string | string[] | undefined;
        name?: string | string[] | {
            amd?: string | undefined;
            commonjs?: string | undefined;
            root?: string | string[] | undefined;
        } | undefined;
        umdNamedDefine?: boolean | undefined;
    };
    constructor(options: ContainerPluginOptions);
    raw(compiler: Compiler): BuiltinPlugin;
}
