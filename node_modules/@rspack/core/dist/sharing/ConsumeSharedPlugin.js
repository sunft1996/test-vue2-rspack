"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsumeSharedPlugin = void 0;
const base_1 = require("../builtin-plugin/base");
const ModuleFederationRuntimePlugin_1 = require("../container/ModuleFederationRuntimePlugin");
const options_1 = require("../container/options");
const utils_1 = require("./utils");
class ConsumeSharedPlugin extends base_1.RspackBuiltinPlugin {
    constructor(options) {
        super();
        this.name = base_1.BuiltinPluginName.ConsumeSharedPlugin;
        this._options = (0, options_1.parseOptions)(options.consumes, (item, key) => {
            if (Array.isArray(item))
                throw new Error("Unexpected array in options");
            let result = item === key || !(0, utils_1.isRequiredVersion)(item)
                ? // item is a request/key
                    {
                        import: key,
                        shareScope: options.shareScope || "default",
                        shareKey: key,
                        requiredVersion: undefined,
                        packageName: undefined,
                        strictVersion: false,
                        singleton: false,
                        eager: false
                    }
                : // key is a request/key
                    // item is a version
                    {
                        import: key,
                        shareScope: options.shareScope || "default",
                        shareKey: key,
                        requiredVersion: item,
                        strictVersion: true,
                        packageName: undefined,
                        singleton: false,
                        eager: false
                    };
            return result;
        }, (item, key) => ({
            import: item.import === false ? undefined : item.import || key,
            shareScope: item.shareScope || options.shareScope || "default",
            shareKey: item.shareKey || key,
            requiredVersion: item.requiredVersion,
            strictVersion: typeof item.strictVersion === "boolean"
                ? item.strictVersion
                : item.import !== false && !item.singleton,
            packageName: item.packageName,
            singleton: !!item.singleton,
            eager: !!item.eager
        })).map(([key, v]) => ({ key, ...v }));
    }
    raw(compiler) {
        ModuleFederationRuntimePlugin_1.ModuleFederationRuntimePlugin.addPlugin(compiler, require.resolve("./initializeSharing.js"));
        ModuleFederationRuntimePlugin_1.ModuleFederationRuntimePlugin.addPlugin(compiler, require.resolve("./consumesLoading.js"));
        return {
            name: this.name,
            options: this._options
        };
    }
}
exports.ConsumeSharedPlugin = ConsumeSharedPlugin;
