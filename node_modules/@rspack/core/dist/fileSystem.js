"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createThreadsafeNodeFSFromRaw = void 0;
const path_1 = require("path");
function createThreadsafeNodeFSFromRaw(fs) {
    return {
        writeFile: (file, data) => fs.writeFileSync(file, data),
        removeFile: file => fs.unlinkSync(file),
        mkdir: dir => fs.mkdirSync(dir),
        mkdirp: dir => fs.mkdirSync(dir, {
            recursive: true
        }),
        removeDirAll: dir => {
            // memfs don't support rmSync
            rmrfBuild(fs)(dir);
        }
    };
}
exports.createThreadsafeNodeFSFromRaw = createThreadsafeNodeFSFromRaw;
const rmrfBuild = (fs) => {
    const rmrf = (dir) => {
        if (fs.existsSync(dir)) {
            const files = fs.readdirSync(dir);
            files.forEach(file => {
                const filePath = (0, path_1.join)(dir, file);
                if (fs.lstatSync(filePath).isDirectory()) {
                    rmrf(filePath);
                }
                else {
                    fs.unlinkSync(filePath);
                }
            });
            fs.rmdirSync(dir);
        }
    };
    return rmrf;
};
