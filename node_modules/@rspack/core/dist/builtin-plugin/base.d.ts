import * as binding from "@rspack/binding";
import { Compiler, RspackPluginInstance } from "..";
export declare enum BuiltinPluginName {
    DefinePlugin = "DefinePlugin",
    ProvidePlugin = "ProvidePlugin",
    BannerPlugin = "BannerPlugin",
    ProgressPlugin = "ProgressPlugin",
    EntryPlugin = "EntryPlugin",
    ExternalsPlugin = "ExternalsPlugin",
    NodeTargetPlugin = "NodeTargetPlugin",
    ElectronTargetPlugin = "ElectronTargetPlugin",
    EnableChunkLoadingPlugin = "EnableChunkLoadingPlugin",
    EnableLibraryPlugin = "EnableLibraryPlugin",
    EnableWasmLoadingPlugin = "EnableWasmLoadingPlugin",
    CommonJsChunkFormatPlugin = "CommonJsChunkFormatPlugin",
    ArrayPushCallbackChunkFormatPlugin = "ArrayPushCallbackChunkFormatPlugin",
    ModuleChunkFormatPlugin = "ModuleChunkFormatPlugin",
    HotModuleReplacementPlugin = "HotModuleReplacementPlugin",
    HttpExternalsRspackPlugin = "HttpExternalsRspackPlugin",
    CopyRspackPlugin = "CopyRspackPlugin",
    HtmlRspackPlugin = "HtmlRspackPlugin",
    SwcJsMinimizerRspackPlugin = "SwcJsMinimizerRspackPlugin",
    SwcCssMinimizerRspackPlugin = "SwcCssMinimizerRspackPlugin",
    LimitChunkCountPlugin = "LimitChunkCountPlugin",
    WebWorkerTemplatePlugin = "WebWorkerTemplatePlugin",
    MergeDuplicateChunksPlugin = "MergeDuplicateChunksPlugin",
    SplitChunksPlugin = "SplitChunksPlugin",
    OldSplitChunksPlugin = "OldSplitChunksPlugin",
    ContainerPlugin = "ContainerPlugin",
    ContainerReferencePlugin = "ContainerReferencePlugin",
    ModuleFederationRuntimePlugin = "ModuleFederationRuntimePlugin",
    ProvideSharedPlugin = "ProvideSharedPlugin",
    ConsumeSharedPlugin = "ConsumeSharedPlugin"
}
export declare abstract class RspackBuiltinPlugin implements RspackPluginInstance {
    abstract raw(compiler: Compiler): binding.BuiltinPlugin | null;
    abstract name: BuiltinPluginName;
    apply(compiler: Compiler): void;
}
export declare function create<T extends any[], R>(name: BuiltinPluginName, resolve: (...args: T) => R): {
    new (...args: T): {
        name: BuiltinPluginName;
        _options: R;
        raw(): binding.BuiltinPlugin;
        apply(compiler: Compiler): void;
    };
};
