"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.create = exports.RspackBuiltinPlugin = exports.BuiltinPluginName = void 0;
// TODO: workaround for https://github.com/napi-rs/napi-rs/pull/1690
var BuiltinPluginName;
(function (BuiltinPluginName) {
    BuiltinPluginName["DefinePlugin"] = "DefinePlugin";
    BuiltinPluginName["ProvidePlugin"] = "ProvidePlugin";
    BuiltinPluginName["BannerPlugin"] = "BannerPlugin";
    BuiltinPluginName["ProgressPlugin"] = "ProgressPlugin";
    BuiltinPluginName["EntryPlugin"] = "EntryPlugin";
    BuiltinPluginName["ExternalsPlugin"] = "ExternalsPlugin";
    BuiltinPluginName["NodeTargetPlugin"] = "NodeTargetPlugin";
    BuiltinPluginName["ElectronTargetPlugin"] = "ElectronTargetPlugin";
    BuiltinPluginName["EnableChunkLoadingPlugin"] = "EnableChunkLoadingPlugin";
    BuiltinPluginName["EnableLibraryPlugin"] = "EnableLibraryPlugin";
    BuiltinPluginName["EnableWasmLoadingPlugin"] = "EnableWasmLoadingPlugin";
    BuiltinPluginName["CommonJsChunkFormatPlugin"] = "CommonJsChunkFormatPlugin";
    BuiltinPluginName["ArrayPushCallbackChunkFormatPlugin"] = "ArrayPushCallbackChunkFormatPlugin";
    BuiltinPluginName["ModuleChunkFormatPlugin"] = "ModuleChunkFormatPlugin";
    BuiltinPluginName["HotModuleReplacementPlugin"] = "HotModuleReplacementPlugin";
    BuiltinPluginName["HttpExternalsRspackPlugin"] = "HttpExternalsRspackPlugin";
    BuiltinPluginName["CopyRspackPlugin"] = "CopyRspackPlugin";
    BuiltinPluginName["HtmlRspackPlugin"] = "HtmlRspackPlugin";
    BuiltinPluginName["SwcJsMinimizerRspackPlugin"] = "SwcJsMinimizerRspackPlugin";
    BuiltinPluginName["SwcCssMinimizerRspackPlugin"] = "SwcCssMinimizerRspackPlugin";
    BuiltinPluginName["LimitChunkCountPlugin"] = "LimitChunkCountPlugin";
    BuiltinPluginName["WebWorkerTemplatePlugin"] = "WebWorkerTemplatePlugin";
    BuiltinPluginName["MergeDuplicateChunksPlugin"] = "MergeDuplicateChunksPlugin";
    BuiltinPluginName["SplitChunksPlugin"] = "SplitChunksPlugin";
    BuiltinPluginName["OldSplitChunksPlugin"] = "OldSplitChunksPlugin";
    BuiltinPluginName["ContainerPlugin"] = "ContainerPlugin";
    BuiltinPluginName["ContainerReferencePlugin"] = "ContainerReferencePlugin";
    BuiltinPluginName["ModuleFederationRuntimePlugin"] = "ModuleFederationRuntimePlugin";
    BuiltinPluginName["ProvideSharedPlugin"] = "ProvideSharedPlugin";
    BuiltinPluginName["ConsumeSharedPlugin"] = "ConsumeSharedPlugin";
})(BuiltinPluginName = exports.BuiltinPluginName || (exports.BuiltinPluginName = {}));
class RspackBuiltinPlugin {
    apply(compiler) {
        let raw = this.raw(compiler);
        if (raw)
            compiler.__internal__registerBuiltinPlugin(raw);
    }
}
exports.RspackBuiltinPlugin = RspackBuiltinPlugin;
function create(name, resolve) {
    class Plugin extends RspackBuiltinPlugin {
        constructor(...args) {
            var _a;
            super();
            this.name = name;
            this._options =
                (_a = resolve(...args)) !== null && _a !== void 0 ? _a : false /* undefined or null will cause napi error, so false for fallback */;
        }
        raw() {
            return {
                name: name,
                options: this._options
            };
        }
    }
    // Make the plugin class name consistent with webpack
    // https://stackoverflow.com/a/46132163
    Object.defineProperty(Plugin, "name", { value: name });
    return Plugin;
}
exports.create = create;
